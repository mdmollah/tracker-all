{
  "swagger" : "2.0",
  "info" : {
    "description" : "Move your app forward with the gpi Corporate API",
    "version" : "2.0.2-sandbox",
    "title" : "gpi Corporate API",
    "contact" : {
      "name" : "Li JIE",
      "url" : "https://www.swift.com",
      "email" : "Li.JIE@swift.com"
    }
  },
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/get_corporate_payment_transactions" : {
      "post" : {
        "tags" : [ "Searching for corporate payment transactions" ],
        "summary" : "Searching for corporate payment transactions",
        "description" : "This API is a payment transaction search to get transaction-level information regarding all payments that match the search criteria.",
        "parameters" : [ {
          "name" : "LAUApplicationID",
          "in" : "header",
          "description" : "ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys",
          "required" : true,
          "default" : "001",
          "type" : "string"
        }, {
          "name" : "LAUVersion",
          "in" : "header",
          "description" : "version of the LAUSigned header. Mandatory. \"1.0\" for this first release",
          "required" : true,
          "type" : "string",
          "default" : "1.0"
        }, {
          "name" : "LAUCallTime",
          "in" : "header",
          "description" : "timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ",
          "required" : true,
          "type" : "string",
          "default" : "2018-03-23T15:56:26.728Z"
        }, {
          "name" : "LAURequestNonce",
          "in" : "header",
          "description" : "a random value generated by the client. Provided with the request and copied by the gpi Connector on the response",
          "required" : true,
          "type" : "string",
          "default" : "e802ab96-bb3a-4965-9139-5214b9f0f074"
        }, {
          "name" : "LAUSigned",
          "in" : "header",
          "description" : "service specific HTTP headers",
          "required" : true,
          "type" : "string",
          "default" : "(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(RBACRole=[FullViewer/Scope/cclabeb0])"
        }, {
          "name" : "LAUSignature",
          "in" : "header",
          "description" : "contains the LAU signature, base64 ecoded",
          "required" : true,
          "type" : "string",
          "default" : "U1khA8h9Lm1PqzB99fG6uw=="
        }, {
          "name" : "x-api-key",
          "in" : "header",
          "description" : "An API key given to your application to authenticate against the sandbox URL",
          "required" : true,
          "type" : "string",
          "default" : "yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B"
        }, {
          "name" : "x-record",
          "in" : "header",
          "description" : "A type of API response to get from API Sandbox. A value between 1 and 7",
          "required" : false,
          "type" : "string",
          "default" : "1"
        }, {
          "name" : "request_body",
          "in" : "body",
          "description" : "Contains the request to obtain information on the corporate status of one or more payment transaction",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/camt.a08.001.01"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Contains the response to the request to obtain information on the corporate status of one or more payment transactions",
            "schema" : {
              "$ref" : "#/definitions/camt.a08.002.01"
            },
            "headers" : {
              "LAUApplicationID" : {
                "default" : "001",
                "description" : "ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys",
                "type" : "string"
              },
              "LAUVersion" : {
                "default" : "1.0",
                "description" : "version of the LAUSigned header. Mandatory. \"1.0\" for this first release",
                "type" : "string"
              },
              "LAUCallTime" : {
                "default" : "2018-03-23T15:56:27.728Z",
                "description" : "timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ",
                "type" : "string"
              },
              "LAURequestNonce" : {
                "default" : "e802ab96-bb3a-4965-9139-5214b9f0f074",
                "description" : "a random value generated by the client. Provided with the request and copied by the gpi Connector on the response",
                "type" : "string"
              },
              "LAUResponseNonce" : {
                "default" : "5f1fdf6c-9bbb-4707-bf9e-776e9be878b3",
                "description" : "a random value generated by the gpi Connector on the response",
                "type" : "string"
              },
              "LAUSignature" : {
                "default" : "U1khA8h9Lm1PqzB99fG6uw==",
                "description" : "contains the LAU signature, base64 ecoded",
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "401" : {
            "description" : "Unauthorized WWW-Authenticate: Bearer realm='SwAP'",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "429" : {
            "description" : "Too many requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "ErrorCode" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "object",
          "properties" : {
            "severity" : {
              "type" : "string",
              "enum" : [ "Fatal", "Transient", "Logic" ]
            },
            "code" : {
              "type" : "string",
              "enum" : [ "INVA/X001", "INVA/X002", "INVA/X003", "INVA/X004", "INVA/X005", "INVA/X008", "Sw.gpi.InvalidRequest", "Sw.gpi.MandatoryFieldMissing", "Sw.gpi.MyInstitutionAuthorizationFailure", "Sw.gpi.FromAuthorizationFailure", "Sw.gpi.NoResultFound", "Sw.gpi.UnknownTransaction", "Sw.gpi.InvalidRBACRole", "Sw.gpi.Signature", "Sw.gpi.Certificate", "Sw.gpi.InternalError", "Sw.gpi.InvalidField", "SwAP001", "SwAP002", "SwAP003", "SwAP005", "SwAP006", "SwAP007", "SwAP008", "SwAP010", "SwAP009", "SwAP011", "SwAP099", "SwAP090", "SwAPProxy001", "SwAPProxy002", "SwAPProxy003", "SwAPProxy004", "SwAPProxy005", "SwAPProxy006", "SwAPProxy007", "SwAPProxy008" ]
            },
            "text" : {
              "type" : "string"
            }
          },
          "required" : [ "severity", "code", "text" ]
        }
      },
      "required" : [ "status" ]
    },
    "camt.a08.001.01" : {
      "type" : "object",
      "description" : "ISO 20022 JSON Schema GetCorporatePaymentTransactionsRequest (camt.a08.001.01) Generated by SWIFT Standards 2018-07-12 05:30:53",
      "additionalProperties" : false,
      "properties" : {
        "get_corporate_payment_transactions_request" : {
          "$ref" : "#/definitions/GetCorporatePaymentTransactionsRequest"
        }
      },
      "example" : {
        "get_corporate_payment_transactions_request" : {
          "my_institution" : [ "BANABEBBXXX" ],
          "uetr" : "eb6305c9-1f7f-49de-aed0-16487c27b42d"
        }
      }
    },
    "camt.a08.002.01" : {
      "type" : "object",
      "description" : "ISO 20022 JSON Schema GetCorporatePaymentTransactionsResponse (camt.a08.002.01) Generated by SWIFT Standards 2018-07-12 05:30:53",
      "additionalProperties" : false,
      "properties" : {
        "get_corporate_payment_transactions_response" : {
          "$ref" : "#/definitions/GetCorporatePaymentTransactionsResponse"
        }
      },
      "example" : {
        "get_corporate_payment_transactions_response" : {
          "payment_transaction" : [ {
            "uetr" : "eb6305c9-1f7f-49de-aed0-16487c27b42d",
            "transaction_status" : {
              "status" : "ACCC"
            },
            "event_time" : "2018-05-09T15:23:10.0Z",
            "originator" : "BANCDEFFXXX",
            "instructed_amount" : {
              "currency" : "USD",
              "Amount" : "1000"
            },
            "confirmed_amount" : {
              "currency" : "USD",
              "Amount" : "965"
            },
            "payment_event" : [ {
              "from" : "BANABEBB",
              "to" : "BANBUS33",
              "charge_bearer" : "CRED",
              "charge_amount" : {
                "currency" : "USD",
                "Amount" : "20"
              }
            }, {
              "from" : "BANBUS33",
              "to" : "BANCDEFF",
              "charge_bearer" : "CRED",
              "charge_amount" : {
                "currency" : "USD",
                "Amount" : "10"
              }
            }, {
              "from" : "BANCDEFF",
              "to" : "AAAAAA20000",
              "charge_bearer" : "CRED",
              "charge_amount" : {
                "currency" : "USD",
                "Amount" : "5"
              }
            } ]
          } ],
          "total_number" : "1"
        }
      }
    },
    "GetCorporatePaymentTransactionsRequest" : {
      "type" : "object",
      "description" : "Contains the request to obtain information on the corporate status of one or more payment transactions.",
      "additionalProperties" : false,
      "properties" : {
        "my_institution" : {
          "type" : "array",
          "maxItems" : 250,
          "description" : "Specifies the institution which payments are requested.",
          "items" : {
            "$ref" : "#/definitions/AnyBICIdentifier"
          }
        },
        "uetr" : {
          "description" : "Contains the unique end to end transaction reference. \r\nFormat is lowercase separated by hyphens.",
          "$ref" : "#/definitions/UUIDv4Identifier"
        },
        "time_window" : {
          "description" : "Time window for this institution to which the search applies.",
          "$ref" : "#/definitions/DateTimePeriodDetails"
        },
        "transaction_status" : {
          "type" : "array",
          "description" : "Specifies the status of a transaction, in a coded form.",
          "items" : {
            "$ref" : "#/definitions/PaymentStatus4"
          }
        },
        "maximum_number" : {
          "description" : "Indicates the maximum number of entries returned.",
          "$ref" : "#/definitions/Number"
        },
        "more" : {
          "description" : "Contains the token to get the next set of responses.",
          "$ref" : "#/definitions/Max350Text"
        }
      },
      "required" : [ "my_institution" ]
    },
    "AnyBICIdentifier" : {
      "type" : "string",
      "description" : "Code allocated to a financial or non-financial institution by the ISO 9362 Registration Authority, as described in ISO 9362 \"Banking - Banking telecommunication messages - Business identifier code (BIC)\".",
      "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
    },
    "UUIDv4Identifier" : {
      "type" : "string",
      "description" : "Universally Unique IDentifier (UUID) version 4, as described in IETC RFC 4122 \"Universally Unique IDentifier (UUID) URN Namespace\".",
      "pattern" : "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
    },
    "DateTimePeriodDetails" : {
      "type" : "object",
      "description" : "Time span defined by a start date and time, and an end date and time.",
      "additionalProperties" : false,
      "properties" : {
        "from_date_time" : {
          "description" : "Date and time at which the range starts.",
          "$ref" : "#/definitions/ISODateTime"
        },
        "to_date_time" : {
          "description" : "Date and time at which the range ends.",
          "$ref" : "#/definitions/ISODateTime"
        }
      },
      "required" : [ "from_date_time", "to_date_time" ]
    },
    "ISODateTime" : {
      "type" : "string",
      "description" : "A particular point in the progression of time defined by a mandatory date and a mandatory time component, expressed in either UTC time format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in \"XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28 October 2004\" which is aligned with ISO 8601.\nNote on the time format:\n1) beginning / end of calendar day\n00:00:00 = the beginning of a calendar day\n24:00:00 = the end of a calendar day\n2) fractions of second in time format\nDecimal fractions of seconds may be included. In this case, the involved parties shall agree on the maximum number of digits that are allowed.",
      "pattern" : "^(?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d(?:\\.[0-9]+)?(?:Z|[+-][01]\\d:[0-5]\\d)?$"
    },
    "PaymentStatus4" : {
      "type" : "object",
      "description" : "Indicates the payment transaction status and optionally the reason for that status. ",
      "additionalProperties" : false,
      "properties" : {
        "status" : {
          "description" : "Reason for the status, as published in an external reason code list.",
          "$ref" : "#/definitions/TransactionIndividualStatus5Code"
        },
        "reason" : {
          "description" : "Provides more details on the status in process.",
          "$ref" : "#/definitions/PaymentReason2Code"
        }
      },
      "required" : [ "status" ]
    },
    "TransactionIndividualStatus5Code" : {
      "type" : "string",
      "description" : "Specifies the status of a single payment transaction.",
      "enum" : [ "RJCT", "ACSP", "ACCC" ]
    },
    "PaymentReason2Code" : {
      "type" : "string",
      "description" : "Provides the reason for a specific Payment Status.",
      "enum" : [ "G005", "G006", "G001" ]
    },
    "Number" : {
      "type" : "string",
      "description" : "Number of objects represented as an integer.",
      "maxLength" : 19
    },
    "Max350Text" : {
      "type" : "string",
      "description" : "Specifies a character string with a maximum length of 350 characters.",
      "minLength" : 1,
      "maxLength" : 350
    },
    "GetCorporatePaymentTransactionsResponse" : {
      "type" : "object",
      "description" : "Contains the response to the request to obtain information on the corporate status of one or more payment transactions.",
      "additionalProperties" : false,
      "properties" : {
        "payment_transaction" : {
          "type" : "array",
          "description" : "Contains details on the payment transaction.",
          "items" : {
            "$ref" : "#/definitions/PaymentTransaction75"
          }
        },
        "total_number" : {
          "description" : "Contains the total number of returned result entries.",
          "$ref" : "#/definitions/Number"
        },
        "more" : {
          "description" : "Contains a token to obtain the next set of responses. It indicates whether there are more results to retrieve, what timestamp to start from and how many more result entries are to be retrieved.",
          "$ref" : "#/definitions/Max350Text"
        }
      },
      "required" : [ "payment_transaction", "total_number" ]
    },
    "PaymentTransaction75" : {
      "type" : "object",
      "description" : "Contains details on the payment transaction.",
      "additionalProperties" : false,
      "properties" : {
        "uetr" : {
          "description" : "Contains the unique end to end transaction reference of a payment.",
          "$ref" : "#/definitions/UUIDv4Identifier"
        },
        "transaction_status" : {
          "description" : "Specifies the status of a transaction, in a coded form.",
          "$ref" : "#/definitions/PaymentStatus4"
        },
        "event_time" : {
          "description" : "This is the time when the related status was reached.",
          "$ref" : "#/definitions/ISODateTime"
        },
        "originator" : {
          "description" : "Party that issues the status.",
          "$ref" : "#/definitions/AnyBICIdentifier"
        },
        "instructed_amount" : {
          "description" : "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.\r\nThis amount has to be transported unchanged through the transaction chain.",
          "$ref" : "#/definitions/ActiveOrHistoricCurrencyAndAmount"
        },
        "confirmed_amount" : {
          "description" : "The actual amount that has been paid to the ultimate beneficiary, after all charges etc... have been deducted.",
          "$ref" : "#/definitions/ActiveOrHistoricCurrencyAndAmount"
        },
        "payment_event" : {
          "type" : "array",
          "description" : "This groups the information of an event, i.e., of a payment message or status confirmation update. It is repeated as many times as there are events to be returned.",
          "items" : {
            "$ref" : "#/definitions/PaymentEvent6"
          }
        }
      },
      "required" : [ "uetr", "transaction_status", "event_time", "originator", "payment_event" ]
    },
    "ActiveOrHistoricCurrencyAndAmount" : {
      "type" : "object",
      "description" : "A number of monetary units specified in an active or a historic currency where the unit of currency is explicit and compliant with ISO 4217.",
      "properties" : {
        "currency" : {
          "$ref" : "#/definitions/ActiveOrHistoricCurrencyCode"
        },
        "Amount" : {
          "type" : "string",
          "maxLength" : 19
        }
      }
    },
    "ActiveOrHistoricCurrencyCode" : {
      "type" : "string",
      "description" : "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
      "pattern" : "^[A-Z]{3,3}$"
    },
    "PaymentEvent6" : {
      "type" : "object",
      "description" : "Contains information coming from the related MT 199 or MT 103, or the StatusConfirmationUpdate.",
      "additionalProperties" : false,
      "properties" : {
        "from" : {
          "description" : "The sending MessagingEndpoint that has created this Business Message for the receiving MessagingEndpoint that will process this Business Message.\r\n\r\nNote\tthe sending MessagingEndpoint might be different from the sending address potentially contained in the transport header (as defined in the transport layer).",
          "$ref" : "#/definitions/AnyBICIdentifier"
        },
        "to" : {
          "description" : "The MessagingEndpoint designated by the sending MessagingEndpoint to be the recipient who will ultimately process this Business Message.\r\n\r\nNote the receiving MessagingEndpoint might be different from the receiving address potentially contained in the transport header (as defined in the transport layer).",
          "$ref" : "#/definitions/AnyBICIdentifier"
        },
        "charge_bearer" : {
          "description" : "Specifies which party/parties will bear the charges associated with the processing of the payment transaction.",
          "$ref" : "#/definitions/ChargeBearerType3Code"
        },
        "charge_amount" : {
          "description" : "Amount of money asked or paid for the charge.",
          "$ref" : "#/definitions/ActiveOrHistoricCurrencyAndAmount"
        },
        "foreign_exchange_details" : {
          "description" : "Specifies the exchange rate details between two currencies.",
          "$ref" : "#/definitions/CurrencyExchange8"
        }
      },
      "required" : [ "from" ]
    },
    "ChargeBearerType3Code" : {
      "type" : "string",
      "description" : "Specifies which party/parties will bear the charges associated with the processing of the payment transaction.",
      "enum" : [ "SHAR", "DEBT", "CRED" ]
    },
    "CurrencyExchange8" : {
      "type" : "object",
      "description" : "Set of elements used to provide details of the currency exchange.",
      "additionalProperties" : false,
      "properties" : {
        "source_currency" : {
          "description" : "Currency from which an amount is to be converted in a currency conversion.",
          "$ref" : "#/definitions/ActiveOrHistoricCurrencyCode"
        },
        "target_currency" : {
          "description" : "Currency into which an amount is to be converted in a currency conversion.",
          "$ref" : "#/definitions/ActiveOrHistoricCurrencyCode"
        },
        "exchange_rate" : {
          "description" : "Factor used to convert an amount from one currency into another. This reflects the price at which one currency was bought with another currency.\n\nUsage: ExchangeRate expresses the ratio between UnitCurrency and QuotedCurrency (ExchangeRate = UnitCurrency/QuotedCurrency).",
          "$ref" : "#/definitions/BaseOneRate"
        }
      },
      "required" : [ "source_currency", "target_currency", "exchange_rate" ]
    },
    "BaseOneRate" : {
      "type" : "string",
      "description" : "Rate expressed as a decimal, eg, 0.7 is 7/10 and 70%.",
      "maxLength" : 12
    }
  },
  "host" : "sandbox.swift.com",
  "basePath" : "/api-tracker-for-corporates-pilot/v2",
  "externalDocs" : {
    "description" : "API Detailed Specification",
    "url" : "https://www2.swift.com/uhbonline/books/protected/en_uk/gpi_trck_api_2_0_det_spec_get/index.htm"
  }
}
