{
  "swagger" : "2.0",
  "info" : {
    "description" : "Move your app forward with the gpi API",
    "version" : "1.2.37",
    "title" : "Tracker API V1"
  },
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/status_confirmations" : {
      "post" : {
        "tags" : [ "Status Confirmations" ],
        "summary" : "Status Confirmations",
        "description" : "This API is a status confirmation update to inform the tracker about the updated status of a given payment",
        "parameters" : [ {
          "name" : "LAUApplicationID",
          "in" : "header",
          "description" : "ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys",
          "required" : true,
          "default" : "001",
          "type" : "string"
        }, {
          "name" : "LAUVersion",
          "in" : "header",
          "description" : "version of the LAUSigned header. Mandatory. \"1.0\" for this first release",
          "required" : true,
          "type" : "string",
          "default" : "1.0"
        }, {
          "name" : "LAUCallTime",
          "in" : "header",
          "description" : "timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ",
          "required" : true,
          "type" : "string",
          "default" : "2018-03-23T15:56:26.728Z"
        }, {
          "name" : "LAURequestNonce",
          "in" : "header",
          "description" : "a random value generated by the client. Provided with the request and copied by the gpi Connector on the response",
          "required" : true,
          "type" : "string",
          "default" : "e802ab96-bb3a-4965-9139-5214b9f0f074"
        }, {
          "name" : "LAUSigned",
          "in" : "header",
          "description" : "service specific HTTP headers",
          "required" : true,
          "type" : "string",
          "default" : "(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(RBACRole=[Update/Scope/cclabeb0])"
        }, {
          "name" : "LAUSignature",
          "in" : "header",
          "description" : "contains the LAU signature, base64 ecoded",
          "required" : true,
          "type" : "string",
          "default" : "U1khA8h9Lm1PqzB99fG6uw=="
        }, {
          "name" : "x-api-key",
          "in" : "header",
          "description" : "An API key given to your application to authenticate against the sandbox URL",
          "required" : true,
          "type" : "string",
          "default" : "yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B"
        }, {
          "name" : "x-record",
          "in" : "header",
          "description" : "A type of API response to get from API Sandbox. A value between 1 and 13",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "request_body",
          "in" : "body",
          "description" : "Status Confirmation Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/camt.a01.001.02"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Status Confirmation Response",
            "schema" : {
              "$ref" : "#/definitions/camt.a01.002.02"
            },
            "headers" : {
              "LAUApplicationID" : {
                "default" : "001",
                "description" : "ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys",
                "type" : "string"
              },
              "LAUVersion" : {
                "default" : "1.0",
                "description" : "version of the LAUSigned header. Mandatory. \"1.0\" for this first release",
                "type" : "string"
              },
              "LAUCallTime" : {
                "default" : "2018-03-23T15:56:27.728Z",
                "description" : "timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ",
                "type" : "string"
              },
              "LAURequestNonce" : {
                "default" : "e802ab96-bb3a-4965-9139-5214b9f0f074",
                "description" : "a random value generated by the client. Provided with the request and copied by the gpi Connector on the response",
                "type" : "string"
              },
              "LAUResponseNonce" : {
                "default" : "5f1fdf6c-9bbb-4707-bf9e-776e9be878b3",
                "description" : "a random value generated by the gpi Connector on the response",
                "type" : "string"
              },
              "LAUSignature" : {
                "default" : "U1khA8h9Lm1PqzB99fG6uw==",
                "description" : "contains the LAU signature, base64 ecoded",
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "401" : {
            "description" : "Unauthorized WWW-Authenticate: Bearer realm='SwAP'",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "429" : {
            "description" : "Too many requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          }
        }
      }
    },
    "/get_payment_transaction_details" : {
      "post" : {
        "tags" : [ "Get Payment Transaction Details" ],
        "summary" : "Get Payment Transaction Details",
        "description" : "This API is a payment query to get detailed information regarding a given payment. It requires the UETR to be known.",
        "parameters" : [ {
          "name" : "LAUApplicationID",
          "in" : "header",
          "description" : "ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys",
          "required" : true,
          "default" : "001",
          "type" : "string"
        }, {
          "name" : "LAUVersion",
          "in" : "header",
          "description" : "version of the LAUSigned header. Mandatory. \"1.0\" for this first release",
          "required" : true,
          "type" : "string",
          "default" : "1.0"
        }, {
          "name" : "LAUCallTime",
          "in" : "header",
          "description" : "timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ",
          "required" : true,
          "type" : "string",
          "default" : "2018-03-23T15:56:26.728Z"
        }, {
          "name" : "LAURequestNonce",
          "in" : "header",
          "description" : "a random value generated by the client. Provided with the request and copied by the gpi Connector on the response",
          "required" : true,
          "type" : "string",
          "default" : "e802ab96-bb3a-4965-9139-5214b9f0f074"
        }, {
          "name" : "LAUSigned",
          "in" : "header",
          "description" : "service specific HTTP headers",
          "required" : true,
          "type" : "string",
          "default" : "(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(RBACRole=[FullViewer/Scope/cclabeb0])"
        }, {
          "name" : "LAUSignature",
          "in" : "header",
          "description" : "contains the LAU signature, base64 ecoded",
          "required" : true,
          "type" : "string",
          "default" : "U1khA8h9Lm1PqzB99fG6uw=="
        }, {
          "name" : "x-api-key",
          "in" : "header",
          "description" : "An API key given to your application to authenticate against the sandbox URL",
          "required" : true,
          "type" : "string",
          "default" : "yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B"
        }, {
          "name" : "x-record",
          "in" : "header",
          "description" : "A type of API response to get from API Sandbox. A value between 1 and 13",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "request_body",
          "in" : "body",
          "description" : "Payment Transaction Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/camt.a02.001.02"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Payment Transaction Response",
            "schema" : {
              "$ref" : "#/definitions/camt.a02.002.02"
            },
            "headers" : {
              "LAUApplicationID" : {
                "default" : "001",
                "description" : "ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys",
                "type" : "string"
              },
              "LAUVersion" : {
                "default" : "1.0",
                "description" : "version of the LAUSigned header. Mandatory. \"1.0\" for this first release",
                "type" : "string"
              },
              "LAUCallTime" : {
                "default" : "2018-03-23T15:56:27.728Z",
                "description" : "timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ",
                "type" : "string"
              },
              "LAURequestNonce" : {
                "default" : "e802ab96-bb3a-4965-9139-5214b9f0f074",
                "description" : "a random value generated by the client. Provided with the request and copied by the gpi Connector on the response",
                "type" : "string"
              },
              "LAUResponseNonce" : {
                "default" : "5f1fdf6c-9bbb-4707-bf9e-776e9be878b3",
                "description" : "a random value generated by the gpi Connector on the response",
                "type" : "string"
              },
              "LAUSignature" : {
                "default" : "U1khA8h9Lm1PqzB99fG6uw==",
                "description" : "contains the LAU signature, base64 ecoded",
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "401" : {
            "description" : "Unauthorized WWW-Authenticate: Bearer realm='SwAP'",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "429" : {
            "description" : "Too many requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          }
        }
      }
    },
    "/get_payment_transactions" : {
      "post" : {
        "tags" : [ "Get Payment Transactions" ],
        "summary" : "Get Payment Transactions",
        "description" : "This API is a payment transaction search to get transaction-level information regarding all payments that match the search criteria.",
        "parameters" : [ {
          "name" : "LAUApplicationID",
          "in" : "header",
          "description" : "ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys",
          "required" : true,
          "default" : "001",
          "type" : "string"
        }, {
          "name" : "LAUVersion",
          "in" : "header",
          "description" : "version of the LAUSigned header. Mandatory. \"1.0\" for this first release",
          "required" : true,
          "type" : "string",
          "default" : "1.0"
        }, {
          "name" : "LAUCallTime",
          "in" : "header",
          "description" : "timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ",
          "required" : true,
          "type" : "string",
          "default" : "2018-03-23T15:56:26.728Z"
        }, {
          "name" : "LAURequestNonce",
          "in" : "header",
          "description" : "a random value generated by the client. Provided with the request and copied by the gpi Connector on the response",
          "required" : true,
          "type" : "string",
          "default" : "e802ab96-bb3a-4965-9139-5214b9f0f074"
        }, {
          "name" : "LAUSigned",
          "in" : "header",
          "description" : "service specific HTTP headers",
          "required" : true,
          "type" : "string",
          "default" : "(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(RBACRole=[FullViewer/Scope/cclabeb0])"
        }, {
          "name" : "LAUSignature",
          "in" : "header",
          "description" : "contains the LAU signature, base64 ecoded",
          "required" : true,
          "type" : "string",
          "default" : "U1khA8h9Lm1PqzB99fG6uw=="
        }, {
          "name" : "x-api-key",
          "in" : "header",
          "description" : "An API key given to your application to authenticate against the sandbox URL",
          "required" : true,
          "type" : "string",
          "default" : "yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B"
        }, {
          "name" : "x-record",
          "in" : "header",
          "description" : "A type of API response to get from API Sandbox. A value between 1 and 13",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "request_body",
          "in" : "body",
          "description" : "Payment Transactions Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/camt.a03.001.02"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Payment Transactions Response",
            "schema" : {
              "$ref" : "#/definitions/camt.a03.002.02"
            },
            "headers" : {
              "LAUApplicationID" : {
                "default" : "001",
                "description" : "ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys",
                "type" : "string"
              },
              "LAUVersion" : {
                "default" : "1.0",
                "description" : "version of the LAUSigned header. Mandatory. \"1.0\" for this first release",
                "type" : "string"
              },
              "LAUCallTime" : {
                "default" : "2018-03-23T15:56:27.728Z",
                "description" : "timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ",
                "type" : "string"
              },
              "LAURequestNonce" : {
                "default" : "e802ab96-bb3a-4965-9139-5214b9f0f074",
                "description" : "a random value generated by the client. Provided with the request and copied by the gpi Connector on the response",
                "type" : "string"
              },
              "LAUResponseNonce" : {
                "default" : "5f1fdf6c-9bbb-4707-bf9e-776e9be878b3",
                "description" : "a random value generated by the gpi Connector on the response",
                "type" : "string"
              },
              "LAUSignature" : {
                "default" : "U1khA8h9Lm1PqzB99fG6uw==",
                "description" : "contains the LAU signature, base64 ecoded",
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "401" : {
            "description" : "Unauthorized WWW-Authenticate: Bearer realm='SwAP'",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "429" : {
            "description" : "Too many requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          }
        }
      }
    },
    "/get_changed_payment_transactions" : {
      "post" : {
        "tags" : [ "Get Changed Payment Transactions" ],
        "summary" : "Get Changed Payment Transactions",
        "description" : "This API is a delta query to get all payment update information starting from a given date and time. This API allows synchronization of a local database with the tracker database.",
        "parameters" : [ {
          "name" : "LAUApplicationID",
          "in" : "header",
          "description" : "ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys",
          "required" : true,
          "default" : "001",
          "type" : "string"
        }, {
          "name" : "LAUVersion",
          "in" : "header",
          "description" : "version of the LAUSigned header. Mandatory. \"1.0\" for this first release",
          "required" : true,
          "type" : "string",
          "default" : "1.0"
        }, {
          "name" : "LAUCallTime",
          "in" : "header",
          "description" : "timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ",
          "required" : true,
          "type" : "string",
          "default" : "2018-03-23T15:56:26.728Z"
        }, {
          "name" : "LAURequestNonce",
          "in" : "header",
          "description" : "a random value generated by the client. Provided with the request and copied by the gpi Connector on the response",
          "required" : true,
          "type" : "string",
          "default" : "e802ab96-bb3a-4965-9139-5214b9f0f074"
        }, {
          "name" : "LAUSigned",
          "in" : "header",
          "description" : "service specific HTTP headers",
          "required" : true,
          "type" : "string",
          "default" : "(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(RBACRole=[FullViewer/Scope/cclabeb0])"
        }, {
          "name" : "LAUSignature",
          "in" : "header",
          "description" : "contains the LAU signature, base64 ecoded",
          "required" : true,
          "type" : "string",
          "default" : "U1khA8h9Lm1PqzB99fG6uw=="
        }, {
          "name" : "x-api-key",
          "in" : "header",
          "description" : "An API key given to your application to authenticate against the sandbox URL",
          "required" : true,
          "type" : "string",
          "default" : "yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B"
        }, {
          "name" : "x-record",
          "in" : "header",
          "description" : "A type of API response to get from API Sandbox. A value between 1 and 13",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "request_body",
          "in" : "body",
          "description" : "Last Changed Payment Transactions Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/camt.a04.001.02"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Last Changed Payment Transactions Request",
            "schema" : {
              "$ref" : "#/definitions/camt.a04.002.02"
            },
            "headers" : {
              "LAUApplicationID" : {
                "default" : "001",
                "description" : "ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys",
                "type" : "string"
              },
              "LAUVersion" : {
                "default" : "1.0",
                "description" : "version of the LAUSigned header. Mandatory. \"1.0\" for this first release",
                "type" : "string"
              },
              "LAUCallTime" : {
                "default" : "2018-03-23T15:56:27.728Z",
                "description" : "timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ",
                "type" : "string"
              },
              "LAURequestNonce" : {
                "default" : "e802ab96-bb3a-4965-9139-5214b9f0f074",
                "description" : "a random value generated by the client. Provided with the request and copied by the gpi Connector on the response",
                "type" : "string"
              },
              "LAUResponseNonce" : {
                "default" : "5f1fdf6c-9bbb-4707-bf9e-776e9be878b3",
                "description" : "a random value generated by the gpi Connector on the response",
                "type" : "string"
              },
              "LAUSignature" : {
                "default" : "U1khA8h9Lm1PqzB99fG6uw==",
                "description" : "contains the LAU signature, base64 ecoded",
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "401" : {
            "description" : "Unauthorized WWW-Authenticate: Bearer realm='SwAP'",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "429" : {
            "description" : "Too many requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          }
        }
      }
    },
    "/get_invalid_events" : {
      "post" : {
        "tags" : [ "Get Invalid Events" ],
        "summary" : "Get Invalid Events",
        "description" : "This API is a payment events' query to get invalid events for payment transactions within a given time frame. An event is either a payment or a status confirmation.",
        "parameters" : [ {
          "name" : "LAUApplicationID",
          "in" : "header",
          "description" : "ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys",
          "required" : true,
          "default" : "001",
          "type" : "string"
        }, {
          "name" : "LAUVersion",
          "in" : "header",
          "description" : "version of the LAUSigned header. Mandatory. \"1.0\" for this first release",
          "required" : true,
          "type" : "string",
          "default" : "1.0"
        }, {
          "name" : "LAUCallTime",
          "in" : "header",
          "description" : "timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ",
          "required" : true,
          "type" : "string",
          "default" : "2018-03-23T15:56:26.728Z"
        }, {
          "name" : "LAURequestNonce",
          "in" : "header",
          "description" : "a random value generated by the client. Provided with the request and copied by the gpi Connector on the response",
          "required" : true,
          "type" : "string",
          "default" : "e802ab96-bb3a-4965-9139-5214b9f0f074"
        }, {
          "name" : "LAUSigned",
          "in" : "header",
          "description" : "service specific HTTP headers",
          "required" : true,
          "type" : "string",
          "default" : "(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(RBACRole=[FullViewer/Scope/cclabeb0])"
        }, {
          "name" : "LAUSignature",
          "in" : "header",
          "description" : "contains the LAU signature, base64 ecoded",
          "required" : true,
          "type" : "string",
          "default" : "U1khA8h9Lm1PqzB99fG6uw=="
        }, {
          "name" : "x-api-key",
          "in" : "header",
          "description" : "An API key given to your application to authenticate against the sandbox URL",
          "required" : true,
          "type" : "string",
          "default" : "yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B"
        }, {
          "name" : "x-record",
          "in" : "header",
          "description" : "A type of API response to get from API Sandbox. A value between 1 and 13",
          "required" : false,
          "type" : "string",
          "default" : "0"
        }, {
          "name" : "request_body",
          "in" : "body",
          "description" : "Payment Event Request",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/camt.a05.001.02"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Payment Events Response",
            "schema" : {
              "$ref" : "#/definitions/camt.a05.002.02"
            },
            "headers" : {
              "LAUApplicationID" : {
                "default" : "001",
                "description" : "ID that identifies the application generationg the API and used by the gpi Connector to retrieve the related LAU keys",
                "type" : "string"
              },
              "LAUVersion" : {
                "default" : "1.0",
                "description" : "version of the LAUSigned header. Mandatory. \"1.0\" for this first release",
                "type" : "string"
              },
              "LAUCallTime" : {
                "default" : "2018-03-23T15:56:27.728Z",
                "description" : "timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ",
                "type" : "string"
              },
              "LAURequestNonce" : {
                "default" : "e802ab96-bb3a-4965-9139-5214b9f0f074",
                "description" : "a random value generated by the client. Provided with the request and copied by the gpi Connector on the response",
                "type" : "string"
              },
              "LAUResponseNonce" : {
                "default" : "5f1fdf6c-9bbb-4707-bf9e-776e9be878b3",
                "description" : "a random value generated by the gpi Connector on the response",
                "type" : "string"
              },
              "LAUSignature" : {
                "default" : "U1khA8h9Lm1PqzB99fG6uw==",
                "description" : "contains the LAU signature, base64 ecoded",
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "401" : {
            "description" : "Unauthorized WWW-Authenticate: Bearer realm='SwAP'",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "404" : {
            "description" : "Not Found",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "429" : {
            "description" : "Too many requests",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "502" : {
            "description" : "Bad Gateway",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "503" : {
            "description" : "Service Unavailable",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          },
          "504" : {
            "description" : "Gateway Timeout",
            "schema" : {
              "$ref" : "#/definitions/ErrorCode"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "ErrorCode" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "object",
          "properties" : {
            "severity" : {
              "type" : "string",
              "enum" : [ "Fatal", "Transient" ]
            },
            "code" : {
              "type" : "string",
              "enum" : [ "X001", "X002", "X003", "X008", "Sw.gpi.InvalidRequest", "Sw.gpi.MandatoryFieldMissing", "Sw.gpi.MyInstitutionAuthorizationFailure", "Sw.gpi.FromAuthorizationFailure", "Sw.gpi.NoResultFound", "Sw.gpi.UnknownTransaction", "Sw.gpi.InvalidRBACRole", "Sw.gpi.InternalError", "SwAP001", "SwAP002", "SwAP003", "SwAP005", "SwAP006", "SwAP007", "SwAP008", "SwAP010", "SwAP009", "SwAP011", "SwAP099", "SwAP090" ]
            },
            "text" : {
              "type" : "string"
            }
          },
          "required" : [ "severity", "code", "text" ]
        }
      },
      "required" : [ "status" ]
    },
    "camt.a01.001.02" : {
      "type" : "object",
      "description" : "Generated by SWIFT Standards 2017-03-22 00:13:52",
      "additionalProperties" : false,
      "properties" : {
        "@xmlns" : {
          "default" : "urn:swift:json:camt.a01.001.02"
        },
        "update_payment_status_request" : {
          "$ref" : "#/definitions/UpdatePaymentStatusRequest"
        }
      },
      "example" : {
        "update_payment_status_request" : {
          "from" : "CCLABEB0",
          "business_service" : "121",
          "transaction_identification" : "97ed4827-7b6f-4491-a06f-b548d5a7512d",
          "instruction_identification" : "CCLABEB0ACSPG000",
          "payment_status" : {
            "detailed_status" : {
              "originator" : "CCLABEB0",
              "transaction_status" : {
                "status" : "ACSP",
                "reason" : "G000"
              },
              "confirmed_amount" : {
                "$" : "1000.",
                "@currency" : "USD"
              }
            }
          }
        }
      }
    },
    "camt.a01.002.02" : {
      "type" : "object",
      "description" : "Generated by SWIFT Standards 2017-03-22 00:13:52",
      "additionalProperties" : false,
      "properties" : {
        "@xmlns" : {
          "default" : "urn:swift:json:camt.a01.002.02"
        },
        "update_payment_status_response" : {
          "$ref" : "#/definitions/UpdatePaymentStatusResponse"
        }
      },
      "example" : {
        "update_payment_status_response" : {
          "network_reference" : "CCLABEB0XXX-2017-05-18T10:26:05.424-00000001"
        }
      }
    },
    "camt.a02.001.02" : {
      "type" : "object",
      "description" : "Generated by SWIFT Standards 2017-03-22 00:13:52",
      "additionalProperties" : false,
      "properties" : {
        "@xmlns" : {
          "default" : "urn:swift:json:camt.a02.001.02"
        },
        "get_payment_transaction_details_request" : {
          "$ref" : "#/definitions/GetPaymentTransactionDetailsRequest"
        }
      },
      "example" : {
        "get_payment_transaction_details_request" : {
          "my_institution" : [ "CCLABEB0" ],
          "transaction_identification" : "a2949d20-53d6-4999-85f5-f4a0dd9adf40"
        }
      }
    },
    "camt.a02.002.02" : {
      "type" : "object",
      "description" : "Generated by SWIFT Standards 2017-03-22 00:13:52",
      "additionalProperties" : false,
      "properties" : {
        "@xmlns" : {
          "default" : "urn:swift:json:camt.a02.002.02"
        },
        "get_payment_transaction_details_response" : {
          "$ref" : "#/definitions/GetPaymentTransactionDetailsResponse"
        }
      },
      "example" : {
        "get_payment_transaction_details_response" : {
          "transaction_identification" : "a2949d20-53d6-4999-85f5-f4a0dd9adf40",
          "transaction_status" : {
            "status" : "ACSC"
          },
          "initiation_time" : "2017-04-13T09:42:40.000+0000",
          "completion_time" : "2017-04-13T09:43:26.000+0000",
          "last_update_time" : "2017-04-13T09:44:07.356+0000",
          "payment_event" : [ {
            "network_reference" : "20170413CCLABEB0AXXX0228001164",
            "message_name_identification" : "199",
            "business_service" : "001",
            "valid" : true,
            "instruction_identification" : "1492076606",
            "transaction_status" : {
              "status" : "ACSC"
            },
            "funds_available" : "2017-04-13T09:43:00.000+0000",
            "from" : "CCLABEB0XXX",
            "to" : "TRCKCHZ0XXX",
            "originator" : "CCLABEB0XXX",
            "sender_acknowledgement_receipt" : "2017-04-13T09:43:26.000+0000",
            "confirmed_amount" : {
              "$" : "159.18",
              "@currency" : "USD"
            },
            "charge_amount" : [ {
              "$" : "20.82",
              "@currency" : "USD"
            }, {
              "$" : "20.",
              "@currency" : "USD"
            } ],
            "update_payment" : "20170413SWFTBEB0AXXX5804502340",
            "last_update_time" : "2017-04-13T09:44:07.356+0000"
          }, {
            "network_reference" : "20170413SWFTBEB0AXXX5804502340",
            "message_name_identification" : "103",
            "business_service" : "001",
            "valid" : true,
            "instruction_identification" : "0016OT0586469",
            "transaction_status" : {
              "status" : "ACSP",
              "reason" : "G000"
            },
            "from" : "SWFTBEB0XXX",
            "to" : "CCLABEB0XXX",
            "originator" : "SWFTBEB0XXX",
            "creditor_agent" : "CCLABEB0XXX",
            "previous_instructing_agent" : "SWFTBEB0XXX",
            "sender_acknowledgement_receipt" : "2017-04-13T09:42:40.000+0000",
            "received_date" : "2017-04-13T09:42:54.000+0000",
            "instructed_amount" : {
              "$" : "200.",
              "@currency" : "USD"
            },
            "interbank_settlement_amount" : {
              "$" : "179.18",
              "@currency" : "USD"
            },
            "interbank_settlement_date" : "2017-04-13",
            "charge_bearer" : "CRED",
            "charge_amount" : [ {
              "$" : "20.82",
              "@currency" : "USD"
            } ],
            "last_update_time" : "2017-04-13T09:44:07.356+0000"
          } ]
        }
      }
    },
    "camt.a03.001.02" : {
      "type" : "object",
      "description" : "Generated by SWIFT Standards 2017-06-29 13:18:18",
      "additionalProperties" : false,
      "properties" : {
        "@xmlns" : {
          "default" : "urn:swift:json:camt.a03.001.02"
        },
        "get_payment_transactions_request" : {
          "$ref" : "#/definitions/GetPaymentTransactionsRequest"
        }
      },
      "example" : {
        "get_payment_transactions_request" : {
          "my_institution" : [ "CCLABEB0" ],
          "time_window" : {
            "from_date_time" : "2017-06-17T09:45:16.058Z",
            "to_date_time" : "2017-06-18T09:45:16.058Z"
          },
          "event" : "RCCA",
          "maximum_number" : "10"
        }
      }
    },
    "camt.a03.002.02" : {
      "type" : "object",
      "description" : "Generated by SWIFT Standards 2017-06-29 13:18:18",
      "additionalProperties" : false,
      "properties" : {
        "@xmlns" : {
          "default" : "urn:swift:json:camt.a03.002.02"
        },
        "get_payment_transactions_response" : {
          "$ref" : "#/definitions/GetPaymentTransactionsResponse"
        }
      },
      "example" : {
        "get_payment_transactions_response" : {
          "payment_transaction" : [ {
            "transaction_identification" : "2726d0de-5d5d-4fa3-8a03-d480b608b1af",
            "my_institution" : "CCLABEB0",
            "role" : "CRAG",
            "event_time" : "2017-06-17T16:59:24.000+0000",
            "transaction_status" : {
              "status" : "ACSC"
            },
            "previous_instructing_agent" : "CCLABEB0XXX",
            "agents" : [ {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSP",
                "reason" : "G000"
              },
              "received" : true
            }, {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSC"
              },
              "received" : true
            } ],
            "creditor_agent" : "CCLABEB0XXX",
            "initiation_time" : "2017-06-17T16:57:37.000+0000",
            "completion_time" : "2017-06-17T17:01:20.000+0000",
            "instructed_amount" : {
              "$" : "1000.",
              "@currency" : "USD"
            },
            "last_update_time" : "2017-06-17T17:01:20.197+0000"
          }, {
            "transaction_identification" : "2726d0de-5d5d-4fa3-8a03-d480b608b1af",
            "my_institution" : "CCLABEB0",
            "role" : "CRAG",
            "event_time" : "2017-06-17T16:55:14.000+0000",
            "transaction_status" : {
              "status" : "ACSC"
            },
            "previous_instructing_agent" : "CCLABEB0XXX",
            "agents" : [ {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSP",
                "reason" : "G000"
              },
              "received" : true
            }, {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSC"
              },
              "received" : true
            } ],
            "creditor_agent" : "CCLABEB0XXX",
            "initiation_time" : "2017-06-17T16:53:28.000+0000",
            "completion_time" : "2017-06-17T16:57:07.000+0000",
            "instructed_amount" : {
              "$" : "1000.",
              "@currency" : "USD"
            },
            "last_update_time" : "2017-06-17T16:57:07.336+0000"
          }, {
            "transaction_identification" : "2726d0de-5d5d-4fa3-8a03-d480b608b1af",
            "my_institution" : "CCLABEB0",
            "role" : "CRAG",
            "event_time" : "2017-06-17T16:48:53.000+0000",
            "transaction_status" : {
              "status" : "ACSC"
            },
            "previous_instructing_agent" : "CCLABEB0XXX",
            "agents" : [ {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSP",
                "reason" : "G000"
              },
              "received" : true
            }, {
              "from" : "PQVBUSLAXXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSC"
              },
              "received" : true
            } ],
            "creditor_agent" : "CCLABEB0XXX",
            "initiation_time" : "2017-06-17T16:47:07.000+0000",
            "completion_time" : "2017-06-17T16:51:38.000+0000",
            "instructed_amount" : {
              "$" : "1000.",
              "@currency" : "USD"
            },
            "last_update_time" : "2017-06-17T16:52:14.847+0000"
          }, {
            "transaction_identification" : "2726d0de-5d5d-4fa3-8a03-d480b608b1af",
            "my_institution" : "CCLABEB0",
            "role" : "CRAG",
            "event_time" : "2017-06-17T16:43:14.000+0000",
            "transaction_status" : {
              "status" : "ACSC"
            },
            "previous_instructing_agent" : "CCLABEB0XXX",
            "agents" : [ {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSP",
                "reason" : "G000"
              },
              "received" : true
            }, {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSC"
              },
              "received" : true
            } ],
            "creditor_agent" : "CCLABEB0XXX",
            "initiation_time" : "2017-06-17T16:41:17.000+0000",
            "completion_time" : "2017-06-17T16:44:27.000+0000",
            "instructed_amount" : {
              "$" : "1000.",
              "@currency" : "USD"
            },
            "last_update_time" : "2017-06-17T16:45:21.091+0000"
          }, {
            "transaction_identification" : "2726d0de-5d5d-4fa3-8a03-d480b608b1af",
            "my_institution" : "CCLABEB0",
            "role" : "CRAG",
            "event_time" : "2017-06-17T16:37:03.000+0000",
            "transaction_status" : {
              "status" : "ACSC"
            },
            "previous_instructing_agent" : "CCLABEB0XXX",
            "agents" : [ {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSC"
              },
              "received" : true
            } ],
            "creditor_agent" : "CCLABEB0XXX",
            "initiation_time" : "2017-06-17T16:36:48.000+0000",
            "completion_time" : "2017-06-17T16:38:17.000+0000",
            "instructed_amount" : {
              "$" : "1000.",
              "@currency" : "USD"
            },
            "last_update_time" : "2017-06-17T16:39:17.236+0000"
          }, {
            "transaction_identification" : "2726d0de-5d5d-4fa3-8a03-d480b608b1af",
            "my_institution" : "CCLABEB0",
            "role" : "CRAG",
            "event_time" : "2017-06-17T16:04:34.000+0000",
            "transaction_status" : {
              "status" : "ACSC"
            },
            "previous_instructing_agent" : "CCLABEB0XXX",
            "agents" : [ {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSP",
                "reason" : "G000"
              },
              "received" : true
            }, {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSC"
              },
              "received" : true
            } ],
            "creditor_agent" : "CCLABEB0XXX",
            "initiation_time" : "2017-06-17T16:02:46.000+0000",
            "completion_time" : "2017-06-17T16:05:28.000+0000",
            "instructed_amount" : {
              "$" : "1000.",
              "@currency" : "USD"
            },
            "last_update_time" : "2017-06-17T16:05:28.494+0000"
          }, {
            "transaction_identification" : "2726d0de-5d5d-4fa3-8a03-d480b608b1af",
            "my_institution" : "CCLABEB0",
            "role" : "CRAG",
            "event_time" : "2017-06-17T16:01:31.000+0000",
            "transaction_status" : {
              "status" : "ACSC"
            },
            "previous_instructing_agent" : "CCLABEB0XXX",
            "agents" : [ {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSP",
                "reason" : "G000"
              },
              "received" : true
            }, {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSC"
              },
              "received" : true
            } ],
            "creditor_agent" : "CCLABEB0XXX",
            "initiation_time" : "2017-06-17T15:59:26.000+0000",
            "completion_time" : "2017-06-17T16:02:21.000+0000",
            "instructed_amount" : {
              "$" : "1000.",
              "@currency" : "USD"
            },
            "last_update_time" : "2017-06-17T16:02:21.110+0000"
          }, {
            "transaction_identification" : "2726d0de-5d5d-4fa3-8a03-d480b608b1af",
            "my_institution" : "CCLABEB0",
            "role" : "CRAG",
            "event_time" : "2017-06-17T15:54:23.000+0000",
            "transaction_status" : {
              "status" : "ACSC"
            },
            "previous_instructing_agent" : "CCLABEB0XXX",
            "agents" : [ {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSP",
                "reason" : "G000"
              },
              "received" : true
            }, {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSC"
              },
              "received" : true
            } ],
            "creditor_agent" : "CCLABEB0XXX",
            "initiation_time" : "2017-06-17T15:52:36.000+0000",
            "completion_time" : "2017-06-17T15:56:47.000+0000",
            "instructed_amount" : {
              "$" : "1000.",
              "@currency" : "USD"
            },
            "last_update_time" : "2017-06-17T15:57:23.100+0000"
          }, {
            "transaction_identification" : "2726d0de-5d5d-4fa3-8a03-d480b608b1af",
            "my_institution" : "CCLABEB0",
            "role" : "CRAG",
            "event_time" : "2017-06-17T15:49:52.000+0000",
            "transaction_status" : {
              "status" : "ACSC"
            },
            "previous_instructing_agent" : "CCLABEB0XXX",
            "agents" : [ {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSP",
                "reason" : "G000"
              },
              "received" : true
            }, {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSC"
              },
              "received" : true
            } ],
            "creditor_agent" : "CCLABEB0XXX",
            "initiation_time" : "2017-06-17T15:47:06.000+0000",
            "completion_time" : "2017-06-17T15:51:06.000+0000",
            "instructed_amount" : {
              "$" : "1000.",
              "@currency" : "USD"
            },
            "last_update_time" : "2017-06-17T15:52:19.892+0000"
          }, {
            "transaction_identification" : "2726d0de-5d5d-4fa3-8a03-d480b608b1af",
            "my_institution" : "CCLABEB0",
            "role" : "CRAG",
            "event_time" : "2017-06-17T15:42:22.000+0000",
            "transaction_status" : {
              "status" : "ACSC"
            },
            "previous_instructing_agent" : "CCLABEB0XXX",
            "agents" : [ {
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "transaction_status" : {
                "status" : "ACSC"
              },
              "received" : true
            } ],
            "creditor_agent" : "CCLABEB0XXX",
            "initiation_time" : "2017-06-17T15:42:07.000+0000",
            "completion_time" : "2017-06-17T15:43:56.000+0000",
            "instructed_amount" : {
              "$" : "1000.",
              "@currency" : "USD"
            },
            "last_update_time" : "2017-06-17T15:44:15.815+0000"
          } ],
          "total_number" : "10",
          "more" : "Yj1QUVZCQkVMQSZkPTIwMTctMDYtMTgmdD0yMDE3LTA2LTE4VDA5OjQ1OjE2LjA1OCZ1PSZjPTIwMTctMDYtMTZUMTU6NDI6MjIuMDAwJmU9MDRkYzM0OWUtZDFjOS00MGIyLThmM2ItZDlhMGU3MWM2YmY1Jmk9UFFWQkJFTEEmaD1QOE53b1k3OGxyV0V4SWN2S0s3UmMrNXRFWE5GNU0wS0U4M1d4M2M0dVJrPQ=="
        }
      }
    },
    "camt.a04.001.02" : {
      "type" : "object",
      "description" : "Generated by SWIFT Standards 2017-06-29 13:18:18",
      "additionalProperties" : false,
      "properties" : {
        "@xmlns" : {
          "default" : "urn:swift:json:camt.a04.001.02"
        },
        "get_changed_payment_transactions_request" : {
          "$ref" : "#/definitions/GetChangedPaymentTransactionsRequest"
        }
      },
      "example" : {
        "get_changed_payment_transactions_request" : {
          "my_institution" : [ "CCLABEB0" ],
          "start_time" : "2017-05-25T09:24:41.174Z"
        }
      }
    },
    "camt.a04.002.02" : {
      "type" : "object",
      "description" : "Generated by SWIFT Standards 2017-03-22 00:13:52",
      "additionalProperties" : false,
      "properties" : {
        "@xmlns" : {
          "default" : "urn:swift:json:camt.a04.002.02"
        },
        "get_changed_payment_transactions_response" : {
          "$ref" : "#/definitions/GetChangedPaymentTransactionsResponse"
        }
      },
      "example" : {
        "get_changed_payment_transactions_response" : {
          "payment_transaction" : [ {
            "transaction_identification" : "f260fac2-511e-11e7-b114-b2f933d5fe66",
            "transaction_status" : {
              "status" : "ACSC"
            },
            "initiation_time" : "2017-05-25T01:35:46.000+0000",
            "completion_time" : "2017-05-25T12:21:25.000+0000",
            "last_update_time" : "2017-05-25T13:37:29.099+0000",
            "payment_event" : [ {
              "network_reference" : "20170525CCLABEB0AXXX0235001472",
              "message_name_identification" : "199",
              "business_service" : "001",
              "valid" : true,
              "instruction_identification" : "1495714878",
              "transaction_status" : {
                "status" : "ACSC"
              },
              "funds_available" : "2017-05-25T12:21:00.000+0000",
              "from" : "CCLABEB0XXX",
              "to" : "TRCKCHZ0XXX",
              "previous_instructing_agent" : "CCLABEB0XXX",
              "sender_acknowledgement_receipt" : "2017-05-25T12:21:25.000+0000",
              "confirmed_amount" : {
                "$" : "1000.",
                "@currency" : "AUD"
              },
              "update_payment" : "20170525CCLABEB0XXX4232944745",
              "last_update_time" : "2017-05-25T13:37:29.099+0000"
            }, {
              "network_reference" : "20170525CCLABEB0XXX4232944745",
              "message_name_identification" : "103",
              "business_service" : "001",
              "valid" : true,
              "sender_reference" : "1705250000264-04",
              "instruction_identification" : "GPICBAA.T0100000",
              "transaction_status" : {
                "status" : "ACSP",
                "reason" : "G000"
              },
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "originator" : "CCLABEB0XXX",
              "creditor_agent" : "CCLABEB0XXX",
              "previous_instructing_agent" : "CCLABEB0XXX",
              "sender_acknowledgement_receipt" : "2017-05-25T01:35:46.000+0000",
              "received_date" : "2017-05-25T01:35:58.000+0000",
              "instructed_amount" : {
                "$" : "1000.",
                "@currency" : "AUD"
              },
              "interbank_settlement_amount" : {
                "$" : "1000.",
                "@currency" : "AUD"
              },
              "interbank_settlement_date" : "2017-05-25",
              "charge_bearer" : "DEBT",
              "last_update_time" : "2017-05-25T13:37:29.099+0000"
            } ]
          }, {
            "transaction_identification" : "07d9d248-511f-11e7-b114-b2f933d5fe66",
            "transaction_status" : {
              "status" : "ACSP",
              "reason" : "G000"
            },
            "initiation_time" : "2017-05-25T12:20:41.000+0000",
            "last_update_time" : "2017-05-25T13:37:35.670+0000",
            "payment_event" : [ {
              "network_reference" : "20170525CCLABEB0XXX2031400605",
              "message_name_identification" : "103",
              "business_service" : "001",
              "valid" : true,
              "sender_reference" : "2017052500002202",
              "instruction_identification" : "R075317525G60000",
              "transaction_status" : {
                "status" : "ACSP",
                "reason" : "G000"
              },
              "from" : "CCLABEB0XXX",
              "to" : "CCLABEB0XXX",
              "originator" : "CCLABEB0XXX",
              "creditor_agent" : "CCLABEB0XXX",
              "previous_instructing_agent" : "CCLABEB0XXX",
              "sender_acknowledgement_receipt" : "2017-05-25T12:20:41.000+0000",
              "received_date" : "2017-05-25T12:20:54.000+0000",
              "instructed_amount" : {
                "$" : "37.01",
                "@currency" : "USD"
              },
              "interbank_settlement_amount" : {
                "$" : "37.01",
                "@currency" : "USD"
              },
              "interbank_settlement_date" : "2017-05-25",
              "charge_bearer" : "SHAR",
              "last_update_time" : "2017-05-25T13:37:35.670+0000"
            } ]
          } ]
        }
      }
    },
    "camt.a05.001.02" : {
      "type" : "object",
      "description" : "Generated by SWIFT Standards 2017-03-22 00:13:52",
      "additionalProperties" : false,
      "properties" : {
        "@xmlns" : {
          "default" : "urn:swift:json:camt.a05.001.02"
        },
        "get_invalid_events_request" : {
          "$ref" : "#/definitions/GetInvalidEventsRequest"
        }
      },
      "example" : {
        "get_invalid_events_request" : {
          "my_institution" : [ "CCLABEB0" ],
          "from_date_time" : "2017-05-25T09:00:00.000Z",
          "to_date_time" : "2017-05-25T17:30:00.000Z"
        }
      }
    },
    "camt.a05.002.02" : {
      "type" : "object",
      "description" : "Generated by SWIFT Standards 2017-03-22 00:13:52",
      "additionalProperties" : false,
      "properties" : {
        "@xmlns" : {
          "default" : "urn:swift:json:camt.a05.002.02"
        },
        "get_invalid_events_response" : {
          "$ref" : "#/definitions/GetInvalidEventsResponse"
        }
      },
      "example" : {
        "get_invalid_events_response" : {
          "event" : [ {
            "transaction_identification" : "afc1dd1f-4aaf-408d-81ab-963ae715ef68",
            "business_service" : "121",
            "participant" : true,
            "network_reference" : "20170505PQVBBEMAAXXX0657000020",
            "message_name_identification" : "103",
            "instruction_identification" : "PES001",
            "from" : "CCLABEB0XXX",
            "to" : "CCLABEB0XXX",
            "invalidity_reason" : "WARN/X009"
          }, {
            "transaction_identification" : "afc1dd1f-4aaf-408d-81ab-963ae715ef68",
            "business_service" : "121",
            "participant" : true,
            "network_reference" : "20170505PQVBBEMAAXXX0657000021",
            "message_name_identification" : "103",
            "instruction_identification" : "TC02-1",
            "from" : "CCLABEB0XXX",
            "to" : "CCLABEB0XXX",
            "invalidity_reason" : "WARN/X009"
          }, {
            "transaction_identification" : "afc1dd1f-4aaf-408d-81ab-963ae715ef68",
            "business_service" : "121",
            "participant" : true,
            "network_reference" : "20170510PQVBUSLAAXXX0256000001",
            "message_name_identification" : "103",
            "instruction_identification" : "TC12-2",
            "from" : "CCLABEB0XXX",
            "to" : "CCLABEB0XXX",
            "invalidity_reason" : "WARN/X009"
          }, {
            "transaction_identification" : "afc1dd1f-4aaf-408d-81ab-963ae715ef68",
            "business_service" : "121",
            "participant" : true,
            "network_reference" : "20170516PQVBBELAAXXX0678025232",
            "message_name_identification" : "199",
            "instruction_identification" : "RF-0000074448826",
            "from" : "CCLABEB0XXX",
            "to" : "TRCKCHZZXXX",
            "invalidity_reason" : "INVA/X002"
          } ]
        }
      }
    },
    "UpdatePaymentStatusRequest" : {
      "type" : "object",
      "description" : "This API is a status confirmation update to inform the tracker about the updated status of a given payment.",
      "additionalProperties" : false,
      "properties" : {
        "from" : {
          "type" : "string",
          "description" : "The sending MessagingEndpoint that has created this Business Message for the receiving MessagingEndpoint that will process this Business Message.[CR][LF][CR][LF]Note[TAB]the sending MessagingEndpoint might be different from the sending address potentially contained in the transport header (as defined in the transport layer).",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "business_service" : {
          "type" : "string",
          "description" : "Specifies the business service agreed between the two MessagingEndpoints under which rules this Business Message is exchanged.[CR][LF] To be used when there is a choice of processing services or processing service levels.[CR][LF]Example: 001",
          "maxLength" : 35,
          "minLength" : 1
        },
        "transaction_identification" : {
          "type" : "string",
          "description" : "Contains the unique end to end transaction reference (UETR). [CR][LF]Format is lowercase separated by hyphens.",
          "maxLength" : 40,
          "minLength" : 1
        },
        "instruction_identification" : {
          "type" : "string",
          "description" : "Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction.[LF][LF]Usage: The instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.",
          "maxLength" : 35,
          "minLength" : 1
        },
        "payment_status" : {
          "$ref" : "#/definitions/PaymentStatusType1Choice"
        }
      },
      "required" : [ "from", "business_service", "transaction_identification", "instruction_identification", "payment_status" ]
    },
    "UpdatePaymentStatusResponse" : {
      "type" : "object",
      "description" : "This API is the response to a status confirmation update to inform the tracker about the updated status of a given payment.",
      "additionalProperties" : false,
      "properties" : {
        "network_reference" : {
          "type" : "string",
          "description" : "Reference assigned by the network.",
          "maxLength" : 350,
          "minLength" : 1
        }
      },
      "required" : [ "network_reference" ],
      "example" : {
        "update_payment_status_response" : {
          "network_reference" : "CCLABEB0XXX-2017-05-18T10:26:05.424-00000001"
        }
      }
    },
    "GetPaymentTransactionDetailsRequest" : {
      "type" : "object",
      "description" : "This API is a payment query to get detailed information regarding a given payment transaction. It requires the UETR to be known.[CR][LF]Examples of use cases are:[CR][LF]•[TAB]Debtor status check - debtor's agent or debtor wants to see the status[CR][LF]•[TAB]Creditor status check - creditor's agent or creditor wants to see the status[CR][LF]",
      "additionalProperties" : false,
      "properties" : {
        "my_institution" : {
          "type" : "array",
          "maxItems" : 250,
          "description" : "Specifies the institution which payments are requested.",
          "items" : {
            "type" : "string",
            "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
          }
        },
        "transaction_identification" : {
          "type" : "string",
          "description" : "Contains the unique end to end transaction reference (UETR) of a payment",
          "maxLength" : 40,
          "minLength" : 1
        }
      },
      "required" : [ "my_institution", "transaction_identification" ]
    },
    "GetPaymentTransactionDetailsResponse" : {
      "type" : "object",
      "description" : "This API is the response to a payment query to get detailed information regarding a given payment transaction.[CR][LF]Examples of use cases are:[CR][LF]•[TAB]Debtor status check - debtor's agent or debtor wants to see the status[CR][LF]•[TAB]Creditor status check - creditor's agent or creditor wants to see the status[CR][LF]",
      "additionalProperties" : false,
      "properties" : {
        "transaction_identification" : {
          "type" : "string",
          "description" : "Contains the unique end to end transaction reference (UETR) of a payment.",
          "maxLength" : 40,
          "minLength" : 1
        },
        "transaction_status" : {
          "$ref" : "#/definitions/PaymentStatus3"
        },
        "initiation_time" : {
          "type" : "string",
          "description" : "Date and Time at which the message enters the GPII system."
        },
        "completion_time" : {
          "type" : "string",
          "description" : "Time at which the Instructed Bank reports that the transaction has been completed. [CR][LF]Date and time based on the creation date of the status confirmation containing a final status ACSC"
        },
        "last_update_time" : {
          "type" : "string",
          "description" : "Last date and time at which the status of this transaction was updated."
        },
        "payment_event" : {
          "type" : "array",
          "description" : "This groups the information of an event, i.e., of a payment message or status confirmation update. It is repeated as many times as there are events to be returned.",
          "items" : {
            "$ref" : "#/definitions/PaymentEvent1"
          }
        }
      },
      "required" : [ "transaction_identification", "transaction_status", "initiation_time", "last_update_time", "payment_event" ]
    },
    "GetPaymentTransactionsRequest" : {
      "type" : "object",
      "description" : "This API is a payment transaction search to get transaction-level information regarding all payments that match the search criteria. To have full information of a given payment transaction, the GetPaymentTransactionDetailsRequest can be used.[CR][LF]Examples of use cases are:[CR][LF]•[TAB]Investigation by a participating institution based on criteria given by a customer, such as instructed amount, time of initiation[CR][LF]•[TAB]Flow monitoring, for instance to find payments that are \"stuck\" for which the institution is the beneficiary institution[CR][LF]•[TAB]Feed a dashboard - give all payment transactions with their last status[CR][LF]",
      "additionalProperties" : false,
      "properties" : {
        "my_institution" : {
          "type" : "array",
          "maxItems" : 250,
          "description" : "Specifies an institution that is owned by the sender, for which the sender can ask payment transaction details.",
          "items" : {
            "type" : "string",
            "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
          }
        },
        "time_window" : {
          "$ref" : "#/definitions/DateTimePeriodDetails"
        },
        "agent" : {
          "type" : "array",
          "description" : "Identifies agent(s) involved in a payment transaction.",
          "items" : {
            "$ref" : "#/definitions/AgentType1"
          }
        },
        "location" : {
          "$ref" : "#/definitions/Location1Code"
        },
        "instruction_identification" : {
          "description" : "Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction.[LF][LF]Usage: The instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.",
          "maxLength" : 35,
          "minLength" : 1
        },
        "transaction_status" : {
          "type" : "array",
          "description" : "Specifies the status of a transaction, in a coded form.",
          "items" : {
            "$ref" : "#/definitions/PaymentStatus3"
          }
        },
        "amount" : {
          "$ref" : "#/definitions/AmountType1"
        },
        "event" : {
          "$ref" : "#/definitions/PaymentTransactionState1Code"
        },
        "maximum_number" : {
          "type" : "string",
          "description" : "Number of objects represented as an integer.",
          "maxLength" : 19
        },
        "more" : {
          "type" : "string",
          "description" : "Contains the token to get the next set of responses.",
          "maxLength" : 350,
          "minLength" : 1
        }
      },
      "required" : [ "my_institution", "time_window", "event", "maximum_number" ]
    },
    "GetPaymentTransactionsResponse" : {
      "type" : "object",
      "description" : "This API is the response to a payment transaction search to get transaction-level information regarding all payments that match the search criteria.[CR][LF]Examples of use cases are:[CR][LF]•[TAB]Investigation by a participating institution based on criteria given by a customer, such as instructed amount, time of initiation[CR][LF]•[TAB]Flow monitoring, for instance to find payments that are \"stuck\" for which the institution is the beneficiary institution[CR][LF]•[TAB]Feed a dashboard - give all payment transactions with their last status[CR][LF]",
      "additionalProperties" : false,
      "properties" : {
        "payment_transaction" : {
          "type" : "array",
          "description" : "contains the payment transactions that meet the search criteria.",
          "items" : {
            "$ref" : "#/definitions/PaymentTransaction72"
          }
        },
        "total_number" : {
          "type" : "string",
          "description" : "Contains the total number of returned result entries.",
          "maxLength" : 19
        },
        "more" : {
          "type" : "string",
          "description" : "Contains a token to obtain the next set of responses. It indicates whether there are more results to retrieve, what timestamp to start from and how many more result entries are to be retrieved.",
          "maxLength" : 350,
          "minLength" : 1
        }
      },
      "required" : [ "payment_transaction", "total_number" ]
    },
    "GetChangedPaymentTransactionsRequest" : {
      "type" : "object",
      "description" : "This API is a delta query to get all payment update information starting from a given date and time. This API allows synchronization of a local database with the tracker database. [CR][LF]All use cases applicable for the get and search of payment transactions apply also for this API. [CR][LF]The use of the API to get the last changed payment transactions is driven by an architectural choice to feed a local database and to optimise the flow between the tracker and the API caller.[CR][LF]",
      "additionalProperties" : false,
      "properties" : {
        "my_institution" : {
          "type" : "array",
          "maxItems" : 250,
          "description" : "Specifies the institution which payments are requested.",
          "items" : {
            "type" : "string",
            "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
          }
        },
        "start_time" : {
          "type" : "string",
          "description" : "Contains the start date and time as from which the last changed payment transactions must be provided."
        },
        "more" : {
          "type" : "string",
          "description" : "Contains a token to obtain the next set of responses. It indicates whether there are more results to retrieve, what timestamp to start from and how many more result entries are to be retrieved.",
          "maxLength" : 350,
          "minLength" : 1
        }
      },
      "required" : [ "my_institution", "start_time" ]
    },
    "GetChangedPaymentTransactionsResponse" : {
      "type" : "object",
      "description" : "This API is the response to a delta query to get all payment update information starting from a given date and time. This API allows synchronization of a local database with the tracker database. [CR][LF]All use cases applicable for the get and search of payment transactions apply also for this API. [CR][LF]The use of the API to get the last changed payment transactions is driven by an architectural choice to feed a local database and to optimise the flow between the tracker and the API caller.[CR][LF]",
      "additionalProperties" : false,
      "properties" : {
        "payment_transaction" : {
          "type" : "array",
          "description" : "contains the payment transactions that meet the search criteria.",
          "items" : {
            "$ref" : "#/definitions/PaymentTransaction73"
          }
        },
        "more" : {
          "type" : "string",
          "description" : "Contains a token to obtain the next set of responses. It indicates whether there are more results to retrieve, what timestamp to start from and how many more result entries are to be retrieved.",
          "maxLength" : 350,
          "minLength" : 1
        }
      }
    },
    "GetInvalidEventsRequest" : {
      "type" : "object",
      "description" : "This API is a payment events query to get invalid events for payment transactions within a given time frame. An event is either a payment or a status confirmation.[CR][LF]The API is typically used for support or audit purposes, where all invalid messages sent or received are retrievable by one API call.[CR][LF]",
      "additionalProperties" : false,
      "properties" : {
        "my_institution" : {
          "type" : "array",
          "maxItems" : 250,
          "description" : "Specifies the institution which payments are requested.",
          "items" : {
            "type" : "string",
            "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
          }
        },
        "from_date_time" : {
          "type" : "string",
          "description" : "Date and time at which the range starts."
        },
        "to_date_time" : {
          "type" : "string",
          "description" : "Date and time at which the range ends."
        }
      },
      "required" : [ "my_institution", "from_date_time", "to_date_time" ]
    },
    "GetInvalidEventsResponse" : {
      "type" : "object",
      "description" : "This API is a payment events response to a query to get invalid events for payment transactions within a given time frame. An event is either a payment or a status confirmation.[CR][LF]The API is typically used for support or audit purposes, where all invalid messages sent or received are retrievable by one API call.[CR][LF]",
      "additionalProperties" : false,
      "properties" : {
        "event" : {
          "type" : "array",
          "description" : "Each instance contains one payment event that matches the search criteria.",
          "items" : {
            "$ref" : "#/definitions/PaymentEvent3"
          }
        }
      },
      "required" : [ "event" ]
    },
    "ActiveOrHistoricCurrencyAndAmount" : {
      "type" : "object",
      "description" : "A number of monetary units specified in an active or a historic currency where the unit of currency is explicit and compliant with ISO 4217.",
      "properties" : {
        "$" : {
          "type" : "string",
          "maxLength" : 19
        },
        "@currency" : {
          "type" : "string",
          "description" : "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
          "pattern" : "^[A-Z]{3,3}$"
        }
      }
    },
    "ForeignExchangeTerms32" : {
      "type" : "object",
      "description" : "Information needed to process a currency exchange or conversion.",
      "additionalProperties" : false,
      "properties" : {
        "from_currency" : {
          "type" : "string",
          "description" : "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
        },
        "to_currency" : {
          "type" : "string",
          "description" : "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
        },
        "exchange_rate" : {
          "type" : "string",
          "description" : "Rate expressed as a decimal, eg, 0.7 is 7/10 and 70%."
        }
      },
      "required" : [ "from_currency", "to_currency", "exchange_rate" ]
    },
    "PaymentReason1Code" : {
      "type" : "string",
      "description" : "Provides the reason for a specific Payment Status.",
      "enum" : [ "G002", "G004", "G000", "G001", "G003" ]
    },
    "PaymentStatus3" : {
      "type" : "object",
      "description" : "Indicates the payment transaction status and optionally the reason for that status.",
      "additionalProperties" : false,
      "properties" : {
        "status" : {
          "$ref" : "#/definitions/TransactionIndividualStatus4Code"
        },
        "reason" : {
          "$ref" : "#/definitions/PaymentReason1Code"
        }
      },
      "required" : [ "status" ]
    },
    "PaymentStatusType1Choice" : {
      "type" : "object",
      "description" : "Contains the status of the payment, either as a raw status, or as a detailed status.",
      "additionalProperties" : false,
      "properties" : {
        "raw_status" : {
          "type" : "string",
          "description" : "Contains the status of the payment taken from field 79 of the MT 199.",
          "maxLength" : 1850,
          "minLength" : 1
        },
        "detailed_status" : {
          "$ref" : "#/definitions/StatusDetails1"
        }
      }
    },
    "StatusDetails1" : {
      "type" : "object",
      "description" : "Contains details on the status of a payment.",
      "additionalProperties" : false,
      "properties" : {
        "originator" : {
          "type" : "string",
          "description" : "Party that issues the status.",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "funds_available" : {
          "type" : "string",
          "description" : "Date and time at which the funds are available,  as reported in the ACSC status update."
        },
        "transaction_status" : {
          "$ref" : "#/definitions/PaymentStatus3"
        },
        "forwarded_agent" : {
          "type" : "string",
          "description" : "Specifies the BIC of the entity to which the entity reporting the status has forwarded the payment transaction.[CR][LF]This element must be used in case the status is ACSP/000 or ACSP/001.",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "confirmed_amount" : {
          "$ref" : "#/definitions/ActiveOrHistoricCurrencyAndAmount"
        },
        "foreign_exchange_details" : {
          "$ref" : "#/definitions/ForeignExchangeTerms32"
        },
        "charge_amount" : {
          "type" : "array",
          "description" : "Amount of money asked or paid for the charge.",
          "items" : {
            "$ref" : "#/definitions/ActiveOrHistoricCurrencyAndAmount"
          }
        }
      },
      "required" : [ "originator", "transaction_status", "confirmed_amount" ]
    },
    "TransactionIndividualStatus4Code" : {
      "type" : "string",
      "description" : "Specifies the status of a single payment transaction.",
      "enum" : [ "RJCT", "ACSP", "ACSC" ]
    },
    "ActiveCurrencyAndAmount" : {
      "type" : "object",
      "description" : "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217.",
      "properties" : {
        "$" : {
          "type" : "string",
          "maxLength" : 19
        },
        "@currency" : {
          "description" : "A code allocated to a currency by a Maintenance Agency under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\".",
          "pattern" : "^[A-Z]{3,3}$"
        }
      }
    },
    "ChargeBearerType3Code" : {
      "type" : "string",
      "description" : "Specifies which party/parties will bear the charges associated with the processing of the payment transaction.",
      "enum" : [ "SHAR", "DEBT", "CRED" ]
    },
    "PaymentEvent1" : {
      "type" : "object",
      "description" : "Contains information coming from the related MT 199 or MT 103, or the StatusConfirmationUpdate.",
      "additionalProperties" : false,
      "properties" : {
        "network_reference" : {
          "type" : "string",
          "description" : "Reference assigned by the network when sending the payment.",
          "maxLength" : 350,
          "minLength" : 1
        },
        "message_name_identification" : {
          "type" : "string",
          "description" : "Specifies the original message name identifier to which the message refers.",
          "maxLength" : 35,
          "minLength" : 1
        },
        "business_service" : {
          "type" : "string",
          "description" : "Specifies the business service agreed between the two MessagingEndpoints under which rules this Business Message is exchanged.[CR][LF] To be used when there is a choice of processing services or processing service levels.[CR][LF]Example: 001",
          "maxLength" : 35,
          "minLength" : 1
        },
        "valid" : {
          "type" : "boolean",
          "description" : "Indicates if a payment is consistent (YES) or not (NO)."
        },
        "invalidity_reason" : {
          "type" : "string",
          "description" : "Contains the additional information in case the event is not a valid component of a payment transaction."
        },
        "invalidity_description" : {
          "type" : "string",
          "description" : "Contains a textual description as to why the event is not a valid component of a payments transaction.",
          "maxLength" : 350,
          "minLength" : 1
        },
        "sender_reference" : {
          "type" : "string",
          "description" : "Identification assigned by the sender of the Message.[CR][LF]For MT format this is the MUR.",
          "maxLength" : 30
        },
        "instruction_identification" : {
          "type" : "string",
          "description" : "Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction.[LF][LF]Usage: The instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.",
          "additionalProperties" : false,
          "maxLength" : 35,
          "minLength" : 1
        },
        "transaction_status" : {
          "$ref" : "#/definitions/PaymentStatus3"
        },
        "forwarded_agent" : {
          "type" : "string",
          "description" : "Specifies the BIC of the entity to which the entity reporting the status has forwarded the payment transaction.",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "funds_available" : {
          "type" : "string",
          "description" : "Date and time at which the funds are available,  as reported in the ACSC status update.[CR][LF]Must only be used when TransactionStatus is \"ACSC\"."
        },
        "from" : {
          "type" : "string",
          "description" : "The sending MessagingEndpoint that has created this Business Message for the receiving MessagingEndpoint that will process this Business Message.[CR][LF][CR][LF]Note[TAB]the sending MessagingEndpoint might be different from the sending address potentially contained in the transport header (as defined in the transport layer).",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "to" : {
          "type" : "string",
          "description" : "The MessagingEndpoint designated by the sending MessagingEndpoint to be the recipient who will ultimately process this Business Message.[CR][LF][CR][LF]Note the receiving MessagingEndpoint might be different from the receiving address potentially contained in the transport header (as defined in the transport layer).",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "originator" : {
          "type" : "string",
          "description" : "Party that issues the status.",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "creditor_agent" : {
          "type" : "string",
          "description" : "Financial institution servicing an account for the creditor.",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "previous_instructing_agent" : {
          "type" : "string",
          "description" : "Agent immediately prior to the instructing agent.",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "sender_acknowledgement_receipt" : {
          "type" : "string",
          "description" : "Date and time at which the sender acknowledged receipt of the message."
        },
        "received_date" : {
          "type" : "string",
          "description" : "Date and time at which the message was acknowledged by the receiver."
        },
        "instructed_amount" : {
          "$ref" : "#/definitions/ActiveOrHistoricCurrencyAndAmount"
        },
        "confirmed_amount" : {
          "$ref" : "#/definitions/ActiveOrHistoricCurrencyAndAmount"
        },
        "interbank_settlement_amount" : {
          "$ref" : "#/definitions/ActiveCurrencyAndAmount"
        },
        "interbank_settlement_date" : {
          "type" : "string",
          "description" : "Date on which the amount of money ceases to be available to the agent that owes it and when the amount of money becomes available to the agent to which it is due."
        },
        "charge_bearer" : {
          "$ref" : "#/definitions/ChargeBearerType3Code"
        },
        "charge_amount" : {
          "type" : "array",
          "description" : "Amount of money asked or paid for the charge.",
          "items" : {
            "$ref" : "#/definitions/ActiveOrHistoricCurrencyAndAmount"
          }
        },
        "foreign_exchange_details" : {
          "$ref" : "#/definitions/ForeignExchangeTerms32"
        },
        "update_payment" : {
          "type" : "string",
          "description" : "Implements the correlation between a payment message and a status update on it. [CR][LF]Contains the network reference of the payment for which the status confirmation was applicable.",
          "maxLength" : 35,
          "minLength" : 1
        },
        "duplicate_message_reference" : {
          "type" : "string",
          "description" : "Network reference of the Payment that is the original recorded Payment.",
          "maxLength" : 50,
          "minLength" : 1
        },
        "copied_business_service" : {
          "type" : "string",
          "description" : "Specifies the copied business service of the market infrastructure.",
          "maxLength" : 35,
          "minLength" : 1
        },
        "last_update_time" : {
          "type" : "string",
          "description" : "Last date and time at which the status of this Payment event was updated."
        }
      },
      "required" : [ "network_reference", "message_name_identification", "business_service", "valid", "instruction_identification", "sender_acknowledgement_receipt", "last_update_time" ]
    },
    "AgentType1" : {
      "type" : "object",
      "description" : "Specifies one or more agents involved in a transaction, with their role.",
      "additionalProperties" : false,
      "properties" : {
        "any_bic" : {
          "type" : "array",
          "description" : "Code allocated to a financial or non-financial institution by the ISO 9362 Registration Authority, as described in ISO 9362 \"Banking - Banking telecommunication messages - Business identifier code (BIC)\".",
          "items" : {
            "type" : "string",
            "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
          }
        },
        "role" : {
          "$ref" : "#/definitions/PaymentsPartyType1Code"
        }
      },
      "required" : [ "any_bic", "role" ]
    },
    "AmountType1" : {
      "type" : "object",
      "description" : "Specifies ranged amounts, for a specific currency and type of amount.",
      "additionalProperties" : false,
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/TypeOfAmount8Code"
        },
        "currency" : {
          "type" : "string",
          "description" : "Code allocated to a currency, by a maintenance agency, under an international identification scheme as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\". Valid currency codes are registered with the ISO 4217 Maintenance Agency, and consist of three contiguous letters.",
          "pattern" : "^[A-Z]{3,3}$"
        },
        "from_amount" : {
          "type" : "string",
          "description" : "Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot.[LF]Note: a zero amount is considered a positive amount.",
          "maxLength" : 19
        },
        "to_amount" : {
          "type" : "string",
          "description" : "Number of monetary units specified in a currency where the unit of currency is implied by the context and compliant with ISO 4217. The decimal separator is a dot.[LF]Note: a zero amount is considered a positive amount.",
          "maxLength" : 19
        }
      },
      "required" : [ "type", "from_amount", "to_amount" ]
    },
    "DateTimePeriodDetails" : {
      "type" : "object",
      "description" : "Time span defined by a start date and time, and an end date and time.",
      "additionalProperties" : false,
      "properties" : {
        "from_date_time" : {
          "type" : "string"
        },
        "to_date_time" : {
          "type" : "string"
        }
      },
      "required" : [ "from_date_time", "to_date_time" ]
    },
    "Location1Code" : {
      "type" : "string",
      "description" : "Specifies the location of the search",
      "enum" : [ "OTHR", "MYIN" ]
    },
    "PaymentTransactionState1Code" : {
      "type" : "string",
      "description" : "Contains the different states which a payment transaction can be in.",
      "enum" : [ "CRED", "RCCA", "RCMY", "STMY", "STDA" ]
    },
    "PaymentsPartyType1Code" : {
      "type" : "string",
      "description" : "CodeSet identifying parties involved in a payments transaction.",
      "enum" : [ "ALPA", "CRAG", "DRAG", "INAG" ]
    },
    "TypeOfAmount8Code" : {
      "type" : "string",
      "description" : "Specifies the type of amount.",
      "enum" : [ "CONF", "INST" ]
    },
    "PaymentEvent2" : {
      "type" : "object",
      "description" : "Contains elements identifying an event belonging to the transaction.",
      "additionalProperties" : false,
      "properties" : {
        "from" : {
          "type" : "string",
          "description" : "The sending MessagingEndpoint that has created this Business Message for the receiving MessagingEndpoint that will process this Business Message.[CR][LF][CR][LF]Note[TAB]the sending MessagingEndpoint might be different from the sending address potentially contained in the transport header (as defined in the transport layer).",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "to" : {
          "type" : "string",
          "description" : "The MessagingEndpoint designated by the sending MessagingEndpoint to be the recipient who will ultimately process this Business Message.[CR][LF][CR][LF]Note the receiving MessagingEndpoint might be different from the receiving address potentially contained in the transport header (as defined in the transport layer).",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "transaction_status" : {
          "$ref" : "#/definitions/PaymentStatus3"
        },
        "forwarded_agent" : {
          "type" : "string",
          "description" : "Specifies the BIC of the entity to which the entity reporting the status has forwarded the payment transaction.",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "received" : {
          "type" : "boolean",
          "description" : "Indicates whether a payment has been received or not."
        }
      },
      "required" : [ "transaction_status", "received" ]
    },
    "PaymentTransaction72" : {
      "type" : "object",
      "description" : "Contains details on the payment transaction.",
      "additionalProperties" : false,
      "properties" : {
        "transaction_identification" : {
          "type" : "string",
          "description" : "Contains the unique end to end transaction reference (UETR) of a payment.",
          "maxLength" : 40,
          "minLength" : 1
        },
        "my_institution" : {
          "type" : "string",
          "description" : "Specifies an institution that is owned by the sender, for which the sender can ask payment transaction details.",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "role" : {
          "$ref" : "#/definitions/PaymentsPartyType2Code"
        },
        "event_time" : {
          "type" : "string",
          "description" : "Time determined by the Role that the entity defined in MyInstitution is playing in this transaction."
        },
        "transaction_status" : {
          "$ref" : "#/definitions/PaymentStatus3"
        },
        "previous_instructing_agent" : {
          "type" : "string",
          "description" : "Agent immediately prior to the instructing agent.",
          "additionalProperties" : false,
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "agents" : {
          "type" : "array",
          "description" : "Identifies the agents currently participating in a transaction.",
          "items" : {
            "$ref" : "#/definitions/PaymentEvent2"
          }
        },
        "creditor_agent" : {
          "type" : "string",
          "description" : "Financial institution servicing an account for the creditor.",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "initiation_time" : {
          "type" : "string",
          "description" : "Date and Time at which the message enters the Gpi system."
        },
        "completion_time" : {
          "type" : "string",
          "description" : "Time at which the Instructed Bank reports that the transaction has been completed. [CR][LF]Date and time based on the creation date of the status confirmation containing a final status ACSC."
        },
        "instructed_amount" : {
          "$ref" : "#/definitions/ActiveOrHistoricCurrencyAndAmount"
        },
        "last_update_time" : {
          "type" : "string",
          "description" : "Last date and time at which the status of this transaction was updated."
        }
      },
      "required" : [ "transaction_identification", "my_institution", "role", "event_time", "transaction_status", "agents", "initiation_time", "instructed_amount", "last_update_time" ]
    },
    "PaymentsPartyType2Code" : {
      "type" : "string",
      "description" : "CodeSet identifying parties involved in a payments transaction.",
      "enum" : [ "CRAG", "DRAG", "INAG" ]
    },
    "PaymentTransaction73" : {
      "type" : "object",
      "description" : "Contains details on the payment transaction.",
      "additionalProperties" : false,
      "properties" : {
        "transaction_identification" : {
          "type" : "string",
          "description" : "Contains the unique end to end transaction reference (UETR) of a payment.",
          "maxLength" : 40,
          "minLength" : 1
        },
        "transaction_status" : {
          "$ref" : "#/definitions/PaymentStatus3"
        },
        "initiation_time" : {
          "type" : "string",
          "description" : "Date and Time at which the message enters the GPII system."
        },
        "completion_time" : {
          "type" : "string",
          "description" : "Time at which the Instructed Bank reports that the transaction has been completed. [CR][LF]Date and time based on the creation date of the status confirmation containing a final status ACSC"
        },
        "last_update_time" : {
          "type" : "string",
          "description" : "Last date and time at which the status of this transaction was updated."
        },
        "payment_event" : {
          "type" : "array",
          "description" : "This groups the information of an event, i.e., of a payment message or status confirmation update. It is repeated as many times as there are events to be returned.",
          "items" : {
            "$ref" : "#/definitions/PaymentEvent1"
          }
        }
      },
      "required" : [ "transaction_identification", "transaction_status", "initiation_time", "last_update_time", "payment_event" ]
    },
    "PaymentEvent3" : {
      "type" : "object",
      "description" : "Contains the details of an invalid payment event.",
      "additionalProperties" : false,
      "properties" : {
        "transaction_identification" : {
          "type" : "string",
          "description" : "Contains the unique end to end transaction reference (UETR) of a payment.",
          "maxLength" : 40,
          "minLength" : 1
        },
        "business_service" : {
          "type" : "string",
          "description" : "Specifies the business service agreed between the two MessagingEndpoints under which rules this Business Message is exchanged.[CR][LF] To be used when there is a choice of processing services or processing service levels.[CR][LF]Example: 001",
          "maxLength" : 35,
          "minLength" : 1
        },
        "participant" : {
          "type" : "boolean",
          "description" : "Indicates whether the requestor institution participates in the payment transaction identified by the Transaction Identification (UETR)."
        },
        "network_reference" : {
          "type" : "string",
          "description" : "Reference assigned by the network when sending the payment.",
          "maxLength" : 350,
          "minLength" : 1
        },
        "message_name_identification" : {
          "type" : "string",
          "description" : "Specifies the original message name identifier to which the message refers.",
          "maxLength" : 35,
          "minLength" : 1
        },
        "instruction_identification" : {
          "type" : "string",
          "description" : "Unique identification, as assigned by an instructing party for an instructed party, to unambiguously identify the instruction.[LF][LF]Usage: The instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.",
          "maxLength" : 35,
          "minLength" : 1
        },
        "from" : {
          "type" : "string",
          "description" : "The sending MessagingEndpoint that has created this Business Message for the receiving MessagingEndpoint that will process this Business Message.[CR][LF][CR][LF]Note[TAB]the sending MessagingEndpoint might be different from the sending address potentially contained in the transport header (as defined in the transport layer).",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "to" : {
          "type" : "string",
          "description" : "The MessagingEndpoint designated by the sending MessagingEndpoint to be the recipient who will ultimately process this Business Message.[CR][LF][CR][LF]Note the receiving MessagingEndpoint might be different from the receiving address potentially contained in the transport header (as defined in the transport layer).",
          "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$"
        },
        "invalidity_reason" : {
          "type" : "string",
          "description" : "Specifies the reason why the event is invalid."
        }
      },
      "required" : [ "transaction_identification", "business_service", "participant", "network_reference", "message_name_identification", "instruction_identification", "from", "invalidity_reason" ]
    }
  },
  "host" : "sandbox.swift.com",
  "basePath" : "/swift-apitracker-pilot/v1"
}
